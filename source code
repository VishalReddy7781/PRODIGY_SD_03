#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX_CONTACTS 100
#define NAME_LEN 50
#define PHONE_LEN 15
#define EMAIL_LEN 50

typedef struct {
    char name[NAME_LEN];
    char phone[PHONE_LEN];
    char email[EMAIL_LEN];
} Contact;

Contact contacts[MAX_CONTACTS];
int contactCount = 0;

void addContact() {
    if (contactCount >= MAX_CONTACTS) {
        printf("Contact list is full!\n");
        return;
    }

    printf("Enter name: ");
    scanf(" %[^\n]", contacts[contactCount].name);
    printf("Enter phone number: ");
    scanf(" %[^\n]", contacts[contactCount].phone);
    printf("Enter email address: ");
    scanf(" %[^\n]", contacts[contactCount].email);

    contactCount++;
    printf("Contact added successfully!\n");
}

void viewContacts() {
    if (contactCount == 0) {
        printf("No contacts to display.\n");
        return;
    }

    for (int i = 0; i < contactCount; i++) {
        printf("Contact %d:\n", i + 1);
        printf("Name: %s\n", contacts[i].name);
        printf("Phone: %s\n", contacts[i].phone);
        printf("Email: %s\n\n", contacts[i].email);
    }
}

void editContact() {
    int index;
    printf("Enter the contact number to edit (1-%d): ", contactCount);
    scanf("%d", &index);

    if (index < 1 || index > contactCount) {
        printf("Invalid contact number.\n");
        return;
    }

    index--; // Convert to zero-based index
    printf("Editing contact %d:\n", index + 1);
    
    printf("Enter new name (or press Enter to keep current): ");
    char newName[NAME_LEN];
    scanf(" %[^\n]", newName);
    if(strlen(newName) > 0) {
        strcpy(contacts[index].name, newName);
    }

    printf("Enter new phone number (or press Enter to keep current): ");
    char newPhone[PHONE_LEN];
    scanf(" %[^\n]", newPhone);
    if(strlen(newPhone) > 0) {
        strcpy(contacts[index].phone, newPhone);
    }

    printf("Enter new email address (or press Enter to keep current): ");
    char newEmail[EMAIL_LEN];
    scanf(" %[^\n]", newEmail);
    if(strlen(newEmail) > 0) {
        strcpy(contacts[index].email, newEmail);
    }

    printf("Contact updated successfully!\n");
}

void deleteContact() {
    int index;
    printf("Enter the contact number to delete (1-%d): ", contactCount);
    scanf("%d", &index);

    if (index < 1 || index > contactCount) {
        printf("Invalid contact number.\n");
        return;
    }

    index--; // Convert to zero-based index
    for (int i = index; i < contactCount - 1; i++) {
        contacts[i] = contacts[i + 1];
    }

    contactCount--;
    printf("Contact deleted successfully!\n");
}

int main() {
    int choice;

    while (1) {
        printf("\nContact Management System\n");
        printf("1. Add Contact\n");
        printf("2. View Contacts\n");
        printf("3. Edit Contact\n");
        printf("4. Delete Contact\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addContact();
                break;
            case 2:
                viewContacts();
                break;
            case 3:
                editContact();
                break;
            case 4:
                deleteContact();
                break;
            case 5:
                exit(0);
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}
